/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.rollercoaster2;

/**
 *
 * @author leoyang
 */
public class RollerCoaster extends javax.swing.JFrame {

    /**
     * Creates new form RollerCoaster2
     */
    public RollerCoaster() {
        initComponents();
    }
    
    private String backTrouble; //Creates variable for back trouble
    private String heartTrouble; //Creates variable for heart trouble
    private double height; //Creates variable for height

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtTitle = new javax.swing.JLabel();
        txtHeight = new javax.swing.JLabel();
        inHeight = new javax.swing.JTextField();
        txtBackTrouble = new javax.swing.JLabel();
        inBackTrouble = new javax.swing.JTextField();
        txtHeartTrouble = new javax.swing.JLabel();
        inHeartTrouble = new javax.swing.JTextField();
        txtEligibility = new javax.swing.JLabel();
        outEligibility = new javax.swing.JTextField();
        txtReason = new javax.swing.JLabel();
        outReason = new javax.swing.JTextField();
        btnCalculate = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtTitle.setFont(new java.awt.Font("Inter", 1, 18)); // NOI18N
        txtTitle.setText("RollerCoaster Ride");

        txtHeight.setFont(new java.awt.Font("Inter", 0, 13)); // NOI18N
        txtHeight.setText("Enter your height (in cm)");

        inHeight.setFont(new java.awt.Font("Inter", 0, 13)); // NOI18N

        txtBackTrouble.setFont(new java.awt.Font("Inter", 0, 13)); // NOI18N
        txtBackTrouble.setText("Back Trouble (Yes/No)");

        inBackTrouble.setFont(new java.awt.Font("Inter", 0, 13)); // NOI18N

        txtHeartTrouble.setFont(new java.awt.Font("Inter", 0, 13)); // NOI18N
        txtHeartTrouble.setText("Heart Trouble (Yes/No)");

        inHeartTrouble.setFont(new java.awt.Font("Inter", 0, 13)); // NOI18N

        txtEligibility.setFont(new java.awt.Font("Inter", 0, 13)); // NOI18N
        txtEligibility.setText("Eligibility");

        outEligibility.setFont(new java.awt.Font("Inter", 0, 13)); // NOI18N

        txtReason.setFont(new java.awt.Font("Inter", 0, 13)); // NOI18N
        txtReason.setText("Reason");

        outReason.setFont(new java.awt.Font("Inter", 0, 13)); // NOI18N

        btnCalculate.setFont(new java.awt.Font("Inter", 0, 13)); // NOI18N
        btnCalculate.setText("Calculate");
        btnCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculateActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Inter", 0, 13)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnExit.setFont(new java.awt.Font("Inter", 0, 13)); // NOI18N
        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTitle)
                    .addComponent(txtHeight)
                    .addComponent(txtBackTrouble)
                    .addComponent(txtHeartTrouble)
                    .addComponent(txtEligibility)
                    .addComponent(txtReason)
                    .addComponent(inHeartTrouble, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                    .addComponent(inBackTrouble)
                    .addComponent(inHeight)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCalculate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnClear)
                        .addGap(12, 12, 12)
                        .addComponent(btnExit))
                    .addComponent(outReason, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                    .addComponent(outEligibility))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtHeight)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtBackTrouble)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inBackTrouble, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtHeartTrouble)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inHeartTrouble, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEligibility)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(outEligibility, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtReason)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(outReason, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCalculate)
                    .addComponent(btnClear)
                    .addComponent(btnExit))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculateActionPerformed
        String heartTrouble=inHeartTrouble.getText(); // Gets text from heart trouble field
        String backTrouble=inBackTrouble.getText(); // Gets text from back trouble field
        double height=Double.parseDouble(inHeight.getText()); // Gets double from height field
        if (backTrouble.equals( "No") && heartTrouble.equals("No")){ //If no back and heart trouble, run following code
            if (height>=122 && height<=188){ //If height is fine, run code
                outEligibility.setText("You can ride the rollercoaster."); //Print if height is eligible
                outReason.setText("");//Clears reason field
            }
            else { //If height is not eligible, run code
                outEligibility.setText("You cannot ride the rollercoaster.");//If too short or too tall, cannot ride
                outReason.setText("Due to your height."); //Print reason
            }
        }
        else if (backTrouble.equals("Yes") && heartTrouble.equals("No")){//If only back trouble, run following code
            if (height>=122 && height<=188){ // If height is fine, run code
                outEligibility.setText("You cannot ride the rollercoaster."); // Print cannot ride
                outReason.setText("Due to your back trouble."); // Print reason, due to back
            }
            else { // If height is ineligible, run code
                outEligibility.setText("You cannot ride the rollercoaster."); //Print cannot ride
                outReason.setText("Due to your height and back trouble."); // Print reason, due to height and back trouble
            }
        }
        else if (backTrouble.equals("No") && heartTrouble.equals("Yes")){ //If only heart trouble, run following code
            if (height>=122 && height<=188){//run code if height is fine
                outEligibility.setText("You cannot ride the rollercoaster."); // Print cannot ride
                outReason.setText("Due to your heart trouble."); //print reason, due to heart
            }
            else {//if height is not fine, run code
                outEligibility.setText("You cannot ride the rollercoaster.");//pritn cannot ride
                outReason.setText("Due to your height and heart trouble.");//print reason, due to height and heart
            }
        }
        else if (backTrouble.equals("Yes") && heartTrouble.equals("Yes")){//run code if both heart and back trouble
            if (height>=122 && height<=188){//if height is fine, run code
                outEligibility.setText("You cannot ride the rollercoaster.");//print cannot ride
                outReason.setText("Due to your heart and back troubles.");//print reason, due to back and heart
            }
            else {// if height is not fine, run code
                outEligibility.setText("You cannot ride the rollercoaster.");//print cannot ride
                outReason.setText("Due to your height and heart and back troubles.");//print reason, due to back and heart and height.
            }
        }
        else {//if incorrect info in back and heart trouble fields, run code
            outEligibility.setText("Error."); // If string is typed incorrectly for back or heart trouble, print
            outReason.setText("Please re-enter your information."); // Print nudge to re-enter information
        }
    }//GEN-LAST:event_btnCalculateActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
       inBackTrouble.setText(""); //Clears back trouble field
       inHeartTrouble.setText(""); //Clears heart trouble field
       inHeight.setText(""); //Clears height field
       outEligibility.setText(""); //Clears eligibility field
       outReason.setText(""); //Clears reason field
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
       System.exit(0); //Closes application
    }//GEN-LAST:event_btnExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RollerCoaster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RollerCoaster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RollerCoaster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RollerCoaster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RollerCoaster().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalculate;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnExit;
    private javax.swing.JTextField inBackTrouble;
    private javax.swing.JTextField inHeartTrouble;
    private javax.swing.JTextField inHeight;
    private javax.swing.JTextField outEligibility;
    private javax.swing.JTextField outReason;
    private javax.swing.JLabel txtBackTrouble;
    private javax.swing.JLabel txtEligibility;
    private javax.swing.JLabel txtHeartTrouble;
    private javax.swing.JLabel txtHeight;
    private javax.swing.JLabel txtReason;
    private javax.swing.JLabel txtTitle;
    // End of variables declaration//GEN-END:variables
}
